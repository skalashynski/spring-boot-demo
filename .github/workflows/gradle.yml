# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Gradle

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          key: v1-dependencies-${{ hashFiles('build.gradle') }}
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
      - name: Download dependencies
        run: >-
          ./gradlew dependencies

      - name: Build and Test.
        run: >-
          ./gradlew build

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: success() || failure()
        with:
          files: build/test-results/**/*.xml

  create_release:
    name: Create Release Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to Docker Hub.
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/spring-boot-demo
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
